# RSMT Pre-commit Configuration
# Install with: pip install pre-commit && pre-commit install

repos:
  # Code formatting
  - repo: https://github.com/psf/black
    rev: 23.3.0
    hooks:
      - id: black
        language_version: python3
        args: [--line-length=88]
        files: ^(rsmt|scripts|tests|tools)/.*\.py$

  # Import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: [--profile=black, --line-length=88]
        files: ^(rsmt|scripts|tests|tools)/.*\.py$

  # Code linting
  - repo: https://github.com/pycqa/flake8
    rev: 6.0.0
    hooks:
      - id: flake8
        args: [--max-line-length=88, --extend-ignore=E203,W503]
        files: ^(rsmt|scripts|tests|tools)/.*\.py$
        additional_dependencies:
          - flake8-docstrings
          - flake8-bugbear
          - flake8-comprehensions

  # Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.3.0
    hooks:
      - id: mypy
        args: [--ignore-missing-imports, --no-strict-optional]
        files: ^rsmt/.*\.py$
        additional_dependencies:
          - types-requests
          - types-PyYAML

  # Security checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [-r, rsmt/, -f, json, -o, bandit-report.json]
        files: ^rsmt/.*\.py$

  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      # Python-specific
      - id: check-ast
        files: \.py$
      - id: check-builtin-literals
        files: \.py$
      - id: debug-statements
        files: \.py$
      - id: name-tests-test
        files: ^tests/.*\.py$
        args: [--pytest-test-first]
      
      # General file checks
      - id: check-added-large-files
        args: [--maxkb=1000]
      - id: check-case-conflict
      - id: check-executables-have-shebangs
      - id: check-merge-conflict
      - id: check-symlinks
      - id: check-yaml
        files: \.(yaml|yml)$
      - id: check-json
        files: \.json$
      - id: check-toml
        files: \.toml$
      
      # Text formatting
      - id: end-of-file-fixer
        exclude: \.svg$
      - id: trailing-whitespace
        exclude: \.svg$
      - id: mixed-line-ending
      - id: fix-byte-order-marker

  # Documentation checks
  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        files: ^rsmt/.*\.py$
        args: [--convention=numpy]

  # YAML formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.0.0
    hooks:
      - id: prettier
        files: \.(yaml|yml|json|md)$
        exclude: ^(docs/_build/|\.github/workflows/)

  # Shell script checking
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.9.0.2
    hooks:
      - id: shellcheck
        files: \.(sh|bash)$

  # Dockerfile linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        files: Dockerfile.*

  # Requirements.txt checking
  - repo: https://github.com/Lucas-C/pre-commit-hooks-safety
    rev: v1.3.2
    hooks:
      - id: python-safety-dependencies-check
        files: requirements.*\.txt$

  # Git commit message format
  - repo: https://github.com/commitizen-tools/commitizen
    rev: 3.2.2
    hooks:
      - id: commitizen
        stages: [commit-msg]

  # Jupyter notebook cleaning
  - repo: https://github.com/nbQA-dev/nbQA
    rev: 1.7.0
    hooks:
      - id: nbqa-black
        files: \.ipynb$
        additional_dependencies: [black==23.3.0]
      - id: nbqa-isort
        files: \.ipynb$
        additional_dependencies: [isort==5.12.0]

  # Check for secrets
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: [--baseline, .secrets.baseline]
        exclude: (poetry\.lock|package-lock\.json|\.git/)

  # Local hooks for RSMT-specific checks
  - repo: local
    hooks:
      # Test that imports work
      - id: test-imports
        name: Test Python imports
        entry: python -c "import rsmt; print('âœ“ RSMT imports work')"
        language: system
        files: ^rsmt/.*\.py$
        pass_filenames: false
      
      # Check migration script
      - id: validate-migration
        name: Validate migration tools
        entry: python tools/migration/validate_migration.py --quick
        language: system
        files: ^(tools/migration/|rsmt/).*\.py$
        pass_filenames: false
      
      # Check for prohibited patterns
      - id: check-prohibited-patterns
        name: Check for prohibited code patterns
        entry: python tools/code_quality/check_patterns.py
        language: system
        files: ^(rsmt|scripts|tests)/.*\.py$
        pass_filenames: false
      
      # Validate documentation links
      - id: check-doc-links
        name: Check documentation links
        entry: python tools/code_quality/check_docs.py
        language: system
        files: ^docs/.*\.md$
        pass_filenames: false

# Configuration for specific tools
default_stages: [commit]

# CI-specific configuration (runs additional checks on CI)
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: [mypy, bandit, python-safety-dependencies-check]
  submodules: false
